@inject ILopHocService LopHocService
@inject INganhHocService NganhHocService
@inject ISnackbar Snackbar
@using MudBlazor.Services

<MudPaper Width="100%" Square="true" Class="mud-theme-primary">
@if(Id == 0)
{
    
    <h1 style="text-align:center">Create Lớp Học</h1>
}
else
{
    <h1 style="text-align:center">Update Lớp Học</h1>
}
<EditForm Model="@lophoc" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    <MudPaper Width="100%">
        <MudItem xs="20" sm="15">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Mã Lớp Học" HelperText="Max. 8 characters"
                                  @bind-Value="lophoc.MaLopHoc" For="@(() => lophoc.MaLopHoc)"/>
                    <MudTextField Label="Tên Lớp Học" HelperText="Max. 8 characters"
                                  @bind-Value="lophoc.TenLopHoc" For="@(() => lophoc.TenLopHoc)"/>
                    <MudSelect @bind-Value="_selectedDepartment" Label="Ngành học" OffsetY="true" AnchorOrigin="Origin.BottomCenter">

                        @foreach (var department in listnganh){
                              <MudSelectItem T=int? Value="@department.Id">@department.TenNganh</MudSelectItem>
                        }
                    </MudSelect>
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">@action</MudButton>
                    <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Cancel</MudButton>
                </MudCardActions>
                <MudText Color="Color.Error">@Messerror</MudText>
            </MudCard> 
        </MudItem>
    </MudPaper>
</EditForm>
</MudPaper>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public BLLopHoc lophoc { get; set; } = new BLLopHoc();
    [Parameter] public int Id { get; set; }
    private List<BLNganhHoc> listnganh{ get; set; } = new List<BLNganhHoc>();
    void Cancel() => MudDialog.Cancel();
    public string action = string.Empty;
    private string Messerror = string.Empty;
    int? _selectedDepartment = 1;
    private async void OnValidSubmit(EditContext context)
    {
        if(Id == 0)
        {
            if (_selectedDepartment.HasValue)
            {
                lophoc.NganhHocId = _selectedDepartment.Value ;
            }
            await LopHocService.Create(lophoc);
            if (LopHocService.CheckError == true)
            {
                Messerror = LopHocService.Messerror;
            }
            else
            {
                StateHasChanged();
                Snackbar.Configuration.SnackbarVariant = Variant.Filled;
                Snackbar.Configuration.MaxDisplayedSnackbars = 10; 
                Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopEnd;
                Snackbar.Add($"Đã Thêm thành công ", Severity.Success);
                MudDialog.Close(DialogResult.Ok(lophoc.Id));
            }
        }
        else
        {
            if (_selectedDepartment.HasValue)
            {
                lophoc.NganhHocId = _selectedDepartment.Value ;
            }
            await LopHocService.Update(lophoc);
            if (LopHocService.CheckError == true)
            {
                Messerror = LopHocService.Messerror;
            }
            else
            {
                StateHasChanged();
                Snackbar.Configuration.SnackbarVariant = Variant.Filled;
                Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopEnd;
                Snackbar.Add($"Đã Sửa thành công ", Severity.Success);
                MudDialog.Close(DialogResult.Ok(lophoc.Id));
            }
        }
    }
    protected override async Task OnParametersSetAsync()
    {
        action = Id == 0 ? "Create Lớp Học" : "Update Lớp Học";
        listnganh = NganhHocService.ListNganhHoc;
        if (Id == 0)
        {
            lophoc = new BLLopHoc();
        }
        else
        {
            var result =await LopHocService.GetId((int)Id);
            if(result != null)
            {
                BLLopHoc checklophoc = result;
                if(checklophoc!=null)
                {
                    lophoc = checklophoc;
                    _selectedDepartment = checklophoc.NganhHocId;
                }
            }
        }
    }
}